#+title: ST2CSE
#+description: ST2CSE
#+author: remi.griot@efrei.fr
#+SETUPFILE: https://fniessen.github.io/org-html-themes/org/theme-readtheorg.setup
#+OPTIONS: num:nil
#+LINK_UP: 
#+LINK_HOME: index.html
* Bienvenue
Ce cours porte sur la conception de systèmes embarqués.
La définition d'un système embarqué n'est pas standardisé mais répond à certaines caractéristiques:
+ Intéragie avec son environnement
+ Dépend la plupart du temps d'un système plus vaste
+ Peut être soumis à des contraintes temps réels
+ Spécialisé sur une tâche en particulier relative à un traitement

Ce terme désigne des systèmes composés de quelques tranistors, capacités et resistances, jusqu'à des ordinateurs embarqués.
Entre ces deux extrêmes se situe les systèmes à base de micro controller, qui sont souvent sous entendu lorsque l'on parle de systèmes embarqués.
Nous utiliserons ce type de système dans le cadre de ce cours. 
La conception d'un système embarqué fait appel à plusieurs domaines:
+ La programmation
+ La conception  de circuit imprimé
+ La conception de boitier et ou chassis
 
Le choix a été fait d'avoir pour ce cours une approche transverse et pragmatique, qui je l'espere vous permettra d'acquerir des compétences
immédiatement utilisables lors de vos projets étudiants et qui vous donnera egalement des perspectives à long terme si vous souhaitez vous orienter vers ce domaine.
Avant le début du cours, il est vivement conseillé:
+ D'installer les logiciels prérequis (voir en bas de page)
+ De créer les comptes associés le cas échéant 

* Contenu

[[./01_Capteur.org]] \\
[[./02_CAO.org]] \\
[[./03_FAO.org]] \\
[[./04_UC.org]] \\
[[./05_projet.org]] \\
[[./06_analogique.org]] \\
[[./07_CI.org]] \\



** Compétences
 
Ce cours doit (normalement) vous permettre de monter en compétences sur la conception de systèmes embarqués, ce qui implique:
+ La caractérisation de capteurs et de la chaine d'acquisition
+ La programation et le traitement de données
+ La conception de carte éléctronique
+ La conception et fabrication numérique

** Evaluation

+ Notes de TPs (30%)
+ Projet (70%) (des éléments du projet seront donnés durant le TPs)

** Projet 
#+ATTR_HTML: :style float:left;margin:0px 20px 20px 0px;
#+attr_html: :width 300px
[[./img/projet_1.png]] 
Le projet consiste en la conception d'un système électronique composé 
+ d'une carte mère acceuillant un microcontroller (carte d'évaluation du marché, programmé par vos soins)
+ une carte fille acceuillant les capteurs et les actionneurs (conçu par vos soins)
+ le boitier acceuillant les deux cartes mentionnés ci dessus (conçu et fabriqué par vos soins)

** Binomes

#+INCLUDE: ./participants.org


** Agenda

|     | CM          | TP1   | TP2            | TP3 | Proj 1 | Proj 2 | Proj 3 |
|-----+-------------+-------+----------------+-----+--------+--------+--------|
| SRD | 11/04 09/05 | 17/05 | Fabrication 2D |     | 19/05  | 27/06  |        |
| TI  | 11/04 09/05 | 12/04 | Fabrication 3D |     | 30/05  | 13/06  |        |
|     |             |       |                |     |        |        |        |





* Logiciels prérequis 
** Conception 3D - Solidworks
#+INCLUDE: ../solidworks_setup.org
** Fabrication 3D - Ideamaker
Logiciel permettant de générer le fichier nécessaire à l'impression 3D. Nous utiliserons le slicer compatible avec les imprimantes de l'innovation Lab. \\
https://www.raise3d.com/ideamaker/

** Programmation microcontroller - STM32CubeIde
Compilateur et programmation de la carte Nucleo \\
https://www.st.com/en/development-tools/stm32cubeide.html

** Création de carte électronique - EasyEDA Designer
Creation de schéma électronique et PCB (Création d’un compte en ligne) \\
https://easyeda.com/editor

** Gestion de version
Les rendus seront à faire via un outil de gestion de version. C'est aussi une des compétences qui vous sera demandé d'acquérir pour ce cours.
Si vous voulez en savoir plus [[../git.org][Gestion de version]]
